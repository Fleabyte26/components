{"version":3,"file":"LegendPie.js","names":["React","FieldSelect","Fieldset","legendTypes","legendValues","LegendPie","onConfigChange","config","legend","handleTypeChange","newType","draft","type","handleValuesChange","newVal","value","Object","prototype","hasOwnProperty","call","map","t","v"],"sources":["../../../src/Legend/LegendPie.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { Dispatch, SetStateAction } from 'react'\nimport type {\n  LegendTypes,\n  LegendValues,\n  CPie,\n  CAll,\n  CPieLegend,\n} from '@looker/visualizations-adapters'\n\nimport { FieldSelect, Fieldset } from '@looker/components'\n\nexport type LegendProps = {\n  config: CPie\n  onConfigChange: Dispatch<SetStateAction<Partial<CAll>>>\n}\n\nconst legendTypes: LegendTypes[] = ['legend', 'labels']\nconst legendValues: LegendValues[] = [\n  'label',\n  'label_percent',\n  'label_value',\n  'percent',\n  'value',\n]\n\nexport const LegendPie = ({ onConfigChange, config }: LegendProps) => {\n  const { legend } = config\n\n  if (!legend) return null\n\n  const handleTypeChange = (newType: string) => {\n    const draft: CPie = {\n      ...(config as CPie),\n      legend: {\n        ...(legend as CPieLegend),\n        type: newType as LegendTypes,\n      },\n    }\n    onConfigChange(draft)\n  }\n\n  const handleValuesChange = (newVal: string) => {\n    const draft: CPie = {\n      ...(config as CPie),\n      legend: {\n        ...(legend as CPieLegend),\n        value: newVal as LegendValues,\n      },\n    }\n    onConfigChange(draft)\n  }\n\n  return (\n    <Fieldset legend=\"Legend Options\" accordion defaultOpen>\n      {Object.prototype.hasOwnProperty.call(legend, 'type') && (\n        <FieldSelect\n          label=\"Legend Type\"\n          options={legendTypes.map(t => ({ value: t }))}\n          value={(legend as CPieLegend).type}\n          onChange={handleTypeChange}\n        />\n      )}\n      {Object.prototype.hasOwnProperty.call(legend, 'value') && (\n        <FieldSelect\n          label=\"Legend Values\"\n          options={legendValues.map(v => ({ value: v }))}\n          value={(legend as CPieLegend).value}\n          onChange={handleValuesChange}\n        />\n      )}\n    </Fieldset>\n  )\n}\n"],"mappings":";;;AAIA,OAAOA,KAAK,MAAM,OAAO;AAUzB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,oBAAoB;AAO1D,MAAMC,WAA0B,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;AACvD,MAAMC,YAA4B,GAAG,CACnC,OAAO,EACP,eAAe,EACf,aAAa,EACb,SAAS,EACT,OAAO,CACR;AAED,OAAO,MAAMC,SAAS,GAAG,CAAC;EAAEC,cAAc;EAAEC;AAAoB,CAAC,KAAK;EACpE,MAAM;IAAEC;EAAO,CAAC,GAAGD,MAAM;EAEzB,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMC,gBAAgB,GAAIC,OAAe,IAAK;IAC5C,MAAMC,KAAW,mCACXJ,MAAM;MACVC,MAAM,kCACAA,MAAM;QACVI,IAAI,EAAEF;MAAsB;IAC7B,EACF;IACDJ,cAAc,CAACK,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,kBAAkB,GAAIC,MAAc,IAAK;IAC7C,MAAMH,KAAW,mCACXJ,MAAM;MACVC,MAAM,kCACAA,MAAM;QACVO,KAAK,EAAED;MAAsB;IAC9B,EACF;IACDR,cAAc,CAACK,KAAK,CAAC;EACvB,CAAC;EAED,OACE,oBAAC,QAAQ;IAAC,MAAM,EAAC,gBAAgB;IAAC,SAAS;IAAC,WAAW;EAAA,GACpDK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,MAAM,EAAE,MAAM,CAAC,IACnD,oBAAC,WAAW;IACV,KAAK,EAAC,aAAa;IACnB,OAAO,EAAEL,WAAW,CAACiB,GAAG,CAACC,CAAC,KAAK;MAAEN,KAAK,EAAEM;IAAE,CAAC,CAAC,CAAE;IAC9C,KAAK,EAAGb,MAAM,CAAgBI,IAAK;IACnC,QAAQ,EAAEH;EAAiB,EAE9B,EACAO,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,MAAM,EAAE,OAAO,CAAC,IACpD,oBAAC,WAAW;IACV,KAAK,EAAC,eAAe;IACrB,OAAO,EAAEJ,YAAY,CAACgB,GAAG,CAACE,CAAC,KAAK;MAAEP,KAAK,EAAEO;IAAE,CAAC,CAAC,CAAE;IAC/C,KAAK,EAAGd,MAAM,CAAgBO,KAAM;IACpC,QAAQ,EAAEF;EAAmB,EAEhC,CACQ;AAEf,CAAC"}