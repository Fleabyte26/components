{"version":3,"file":"Checkbox.js","names":["React","useState","useEffect","FieldCheckbox","Checkbox","onChange","label","checked","isChecked","setIsChecked","Boolean"],"sources":["../../../src/Checkbox/Checkbox.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React, { useState, useEffect } from 'react'\nimport { FieldCheckbox } from '@looker/components'\n\ninterface CheckboxProps {\n  label?: string\n  onChange?: (isChecked: boolean) => void\n  checked?: boolean\n}\n\n/**\n * A simple checkbox designed to be symmetrical with other components used in\n * Config editor. Stores checked state, and accepts a \"checked\" prop (rather\n * than \"checked\" per standard checkbox)\n */\n\nexport const Checkbox = ({ onChange, label, checked }: CheckboxProps) => {\n  const [isChecked, setIsChecked] = useState(Boolean(checked))\n  useEffect(() => {\n    if (checked !== isChecked) {\n      onChange?.(isChecked)\n    }\n  }, [isChecked, onChange, checked])\n  return (\n    <FieldCheckbox\n      label={label}\n      checked={isChecked}\n      onChange={() => {\n        setIsChecked(!isChecked)\n      }}\n    />\n  )\n}\n"],"mappings":";AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,oBAAoB;;AAclD,OAAO,MAAMC,QAAQ,GAAG,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAuB,CAAC,KAAK;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACS,OAAO,CAACH,OAAO,CAAC,CAAC;EAC5DL,SAAS,CAAC,MAAM;IACd,IAAIK,OAAO,KAAKC,SAAS,EAAE;MACzBH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGG,SAAS,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,SAAS,EAAEH,QAAQ,EAAEE,OAAO,CAAC,CAAC;EAClC,OACE,oBAAC,aAAa;IACZ,KAAK,EAAED,KAAM;IACb,OAAO,EAAEE,SAAU;IACnB,QAAQ,EAAE,MAAM;MACdC,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EAAE,EACF;AAEN,CAAC"}