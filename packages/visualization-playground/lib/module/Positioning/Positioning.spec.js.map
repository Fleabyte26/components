{"version":3,"file":"Positioning.spec.js","names":["React","screen","fireEvent","renderWithTheme","mockBarConfig","mockLineConfig","Positioning","afterEach","jest","resetAllMocks","describe","handleConfigChange","fn","it","container","type","expect","toBeEmptyDOMElement","positioning","click","getByLabelText","getByText","toHaveBeenLastCalledWith","objectContaining"],"sources":["../../../src/Positioning/Positioning.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { screen, fireEvent } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { mockBarConfig, mockLineConfig } from '@looker/visualizations-adapters'\nimport { Positioning } from './Positioning'\n\nafterEach(() => {\n  jest.resetAllMocks()\n})\n\ndescribe('Positioning', () => {\n  const handleConfigChange = jest.fn()\n\n  it('hidden when positioning is unsupported', () => {\n    const { container } = renderWithTheme(\n      <Positioning\n        config={{ type: 'unsupported' as 'line' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    expect(container).toBeEmptyDOMElement()\n  })\n\n  it('area positioning: overlay', () => {\n    renderWithTheme(\n      <Positioning\n        config={{ ...mockLineConfig, type: 'area', positioning: 'percent' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    // open select menu\n    fireEvent.click(screen.getByLabelText('Positioning'))\n\n    // choose new option\n    fireEvent.click(screen.getByText('overlay'))\n\n    expect(handleConfigChange).toHaveBeenLastCalledWith(\n      expect.objectContaining({\n        type: 'area',\n        positioning: 'overlay',\n      })\n    )\n  })\n\n  it('bar positioning: grouped', () => {\n    renderWithTheme(\n      <Positioning\n        config={{ ...mockBarConfig, positioning: 'percent' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    // open select menu\n    fireEvent.click(screen.getByLabelText('Positioning'))\n\n    // choose new option\n    fireEvent.click(screen.getByText('grouped'))\n\n    expect(handleConfigChange).toHaveBeenLastCalledWith(\n      expect.objectContaining({\n        type: 'bar',\n        positioning: 'grouped',\n      })\n    )\n  })\n})\n"],"mappings":";;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,QAAQ,wBAAwB;AAC1D,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,aAAa,EAAEC,cAAc,QAAQ,iCAAiC;AAC/E,SAASC,WAAW,QAAQ,eAAe;AAE3CC,SAAS,CAAC,MAAM;EACdC,IAAI,CAACC,aAAa,EAAE;AACtB,CAAC,CAAC;AAEFC,QAAQ,CAAC,aAAa,EAAE,MAAM;EAC5B,MAAMC,kBAAkB,GAAGH,IAAI,CAACI,EAAE,EAAE;EAEpCC,EAAE,CAAC,wCAAwC,EAAE,MAAM;IACjD,MAAM;MAAEC;IAAU,CAAC,GAAGX,eAAe,CACnC,oBAAC,WAAW;MACV,MAAM,EAAE;QAAEY,IAAI,EAAE;MAAwB,CAAE;MAC1C,cAAc,EAAEJ;IAAmB,EACnC,CACH;IAEDK,MAAM,CAACF,SAAS,CAAC,CAACG,mBAAmB,EAAE;EACzC,CAAC,CAAC;EAEFJ,EAAE,CAAC,2BAA2B,EAAE,MAAM;IACpCV,eAAe,CACb,oBAAC,WAAW;MACV,MAAM,kCAAOE,cAAc;QAAEU,IAAI,EAAE,MAAM;QAAEG,WAAW,EAAE;MAAS,EAAG;MACpE,cAAc,EAAEP;IAAmB,EACnC,CACH;;IAGDT,SAAS,CAACiB,KAAK,CAAClB,MAAM,CAACmB,cAAc,CAAC,aAAa,CAAC,CAAC;;IAGrDlB,SAAS,CAACiB,KAAK,CAAClB,MAAM,CAACoB,SAAS,CAAC,SAAS,CAAC,CAAC;IAE5CL,MAAM,CAACL,kBAAkB,CAAC,CAACW,wBAAwB,CACjDN,MAAM,CAACO,gBAAgB,CAAC;MACtBR,IAAI,EAAE,MAAM;MACZG,WAAW,EAAE;IACf,CAAC,CAAC,CACH;EACH,CAAC,CAAC;EAEFL,EAAE,CAAC,0BAA0B,EAAE,MAAM;IACnCV,eAAe,CACb,oBAAC,WAAW;MACV,MAAM,kCAAOC,aAAa;QAAEc,WAAW,EAAE;MAAS,EAAG;MACrD,cAAc,EAAEP;IAAmB,EACnC,CACH;;IAGDT,SAAS,CAACiB,KAAK,CAAClB,MAAM,CAACmB,cAAc,CAAC,aAAa,CAAC,CAAC;;IAGrDlB,SAAS,CAACiB,KAAK,CAAClB,MAAM,CAACoB,SAAS,CAAC,SAAS,CAAC,CAAC;IAE5CL,MAAM,CAACL,kBAAkB,CAAC,CAACW,wBAAwB,CACjDN,MAAM,CAACO,gBAAgB,CAAC;MACtBR,IAAI,EAAE,KAAK;MACXG,WAAW,EAAE;IACf,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}