{"version":3,"file":"Checkbox.js","names":["Checkbox","onChange","label","checked","useState","Boolean","isChecked","setIsChecked","useEffect"],"sources":["../../../src/Checkbox/Checkbox.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React, { useState, useEffect } from 'react'\nimport { FieldCheckbox } from '@looker/components'\n\ninterface CheckboxProps {\n  label?: string\n  onChange?: (isChecked: boolean) => void\n  checked?: boolean\n}\n\n/**\n * A simple checkbox designed to be symmetrical with other components used in\n * Config editor. Stores checked state, and accepts a \"checked\" prop (rather\n * than \"checked\" per standard checkbox)\n */\n\nexport const Checkbox = ({ onChange, label, checked }: CheckboxProps) => {\n  const [isChecked, setIsChecked] = useState(Boolean(checked))\n  useEffect(() => {\n    if (checked !== isChecked) {\n      onChange?.(isChecked)\n    }\n  }, [isChecked, onChange, checked])\n  return (\n    <FieldCheckbox\n      label={label}\n      checked={isChecked}\n      onChange={() => {\n        setIsChecked(!isChecked)\n      }}\n    />\n  )\n}\n"],"mappings":";;;;;;;;;AAIA;AACA;AAAkD;AAAA;;AAc3C,IAAMA,QAAQ,GAAG,SAAXA,QAAQ,OAAoD;EAAA,IAA9CC,QAAQ,QAARA,QAAQ;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;EACjD,gBAAkC,IAAAC,eAAQ,EAACC,OAAO,CAACF,OAAO,CAAC,CAAC;IAAA;IAArDG,SAAS;IAAEC,YAAY;EAC9B,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAIL,OAAO,KAAKG,SAAS,EAAE;MACzBL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGK,SAAS,CAAC;IACvB;EACF,CAAC,EAAE,CAACA,SAAS,EAAEL,QAAQ,EAAEE,OAAO,CAAC,CAAC;EAClC,OACE,gCAAC,yBAAa;IACZ,KAAK,EAAED,KAAM;IACb,OAAO,EAAEI,SAAU;IACnB,QAAQ,EAAE,oBAAM;MACdC,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EAAE,EACF;AAEN,CAAC;AAAA"}