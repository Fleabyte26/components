{"version":3,"file":"Positioning.spec.js","names":["afterEach","jest","resetAllMocks","describe","handleConfigChange","fn","it","renderWithTheme","type","container","expect","toBeEmptyDOMElement","mockLineConfig","positioning","fireEvent","click","screen","getByLabelText","getByText","toHaveBeenLastCalledWith","objectContaining","mockBarConfig"],"sources":["../../../src/Positioning/Positioning.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { screen, fireEvent } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { mockBarConfig, mockLineConfig } from '@looker/visualizations-adapters'\nimport { Positioning } from './Positioning'\n\nafterEach(() => {\n  jest.resetAllMocks()\n})\n\ndescribe('Positioning', () => {\n  const handleConfigChange = jest.fn()\n\n  it('hidden when positioning is unsupported', () => {\n    const { container } = renderWithTheme(\n      <Positioning\n        config={{ type: 'unsupported' as 'line' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    expect(container).toBeEmptyDOMElement()\n  })\n\n  it('area positioning: overlay', () => {\n    renderWithTheme(\n      <Positioning\n        config={{ ...mockLineConfig, type: 'area', positioning: 'percent' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    // open select menu\n    fireEvent.click(screen.getByLabelText('Positioning'))\n\n    // choose new option\n    fireEvent.click(screen.getByText('overlay'))\n\n    expect(handleConfigChange).toHaveBeenLastCalledWith(\n      expect.objectContaining({\n        type: 'area',\n        positioning: 'overlay',\n      })\n    )\n  })\n\n  it('bar positioning: grouped', () => {\n    renderWithTheme(\n      <Positioning\n        config={{ ...mockBarConfig, positioning: 'percent' }}\n        onConfigChange={handleConfigChange}\n      />\n    )\n\n    // open select menu\n    fireEvent.click(screen.getByLabelText('Positioning'))\n\n    // choose new option\n    fireEvent.click(screen.getByText('grouped'))\n\n    expect(handleConfigChange).toHaveBeenLastCalledWith(\n      expect.objectContaining({\n        type: 'bar',\n        positioning: 'grouped',\n      })\n    )\n  })\n})\n"],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AAA2C;AAAA;AAE3CA,SAAS,CAAC,YAAM;EACdC,IAAI,CAACC,aAAa,EAAE;AACtB,CAAC,CAAC;AAEFC,QAAQ,CAAC,aAAa,EAAE,YAAM;EAC5B,IAAMC,kBAAkB,GAAGH,IAAI,CAACI,EAAE,EAAE;EAEpCC,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,uBAAsB,IAAAC,oCAAe,EACnC,gCAAC,wBAAW;QACV,MAAM,EAAE;UAAEC,IAAI,EAAE;QAAwB,CAAE;QAC1C,cAAc,EAAEJ;MAAmB,EACnC,CACH;MALOK,SAAS,oBAATA,SAAS;IAOjBC,MAAM,CAACD,SAAS,CAAC,CAACE,mBAAmB,EAAE;EACzC,CAAC,CAAC;EAEFL,EAAE,CAAC,2BAA2B,EAAE,YAAM;IACpC,IAAAC,oCAAe,EACb,gCAAC,wBAAW;MACV,MAAM,kCAAOK,sCAAc;QAAEJ,IAAI,EAAE,MAAM;QAAEK,WAAW,EAAE;MAAS,EAAG;MACpE,cAAc,EAAET;IAAmB,EACnC,CACH;;IAGDU,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;;IAGrDH,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACE,SAAS,CAAC,SAAS,CAAC,CAAC;IAE5CR,MAAM,CAACN,kBAAkB,CAAC,CAACe,wBAAwB,CACjDT,MAAM,CAACU,gBAAgB,CAAC;MACtBZ,IAAI,EAAE,MAAM;MACZK,WAAW,EAAE;IACf,CAAC,CAAC,CACH;EACH,CAAC,CAAC;EAEFP,EAAE,CAAC,0BAA0B,EAAE,YAAM;IACnC,IAAAC,oCAAe,EACb,gCAAC,wBAAW;MACV,MAAM,kCAAOc,qCAAa;QAAER,WAAW,EAAE;MAAS,EAAG;MACrD,cAAc,EAAET;IAAmB,EACnC,CACH;;IAGDU,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC;;IAGrDH,iBAAS,CAACC,KAAK,CAACC,cAAM,CAACE,SAAS,CAAC,SAAS,CAAC,CAAC;IAE5CR,MAAM,CAACN,kBAAkB,CAAC,CAACe,wBAAwB,CACjDT,MAAM,CAACU,gBAAgB,CAAC;MACtBZ,IAAI,EAAE,KAAK;MACXK,WAAW,EAAE;IACf,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}