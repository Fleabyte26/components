{"version":3,"file":"CodeToggle.js","names":["CodeToggle","configOverrides","config","query","dashboard","codeToggled","setCodeToggled","useQueryIdFromDashboard","dashboardQueryId","queryId","useQueryId","useVisConfig","visConfig","visConfigSorted","sortObjectByKeys","visConfigToDisplay","JSON","stringify","StyledCopyToClipboard","styled","CopyToClipboard"],"sources":["../../../src/CodeToggle/CodeToggle.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { SetStateAction, Dispatch } from 'react'\nimport type { CAll } from '@looker/visualizations-adapters'\nimport {\n  useVisConfig,\n  useQueryId,\n  useQueryIdFromDashboard,\n} from '@looker/components-data'\nimport { CopyToClipboard, Space, IconButton } from '@looker/components'\nimport styled from 'styled-components'\nimport { sortObjectByKeys } from '../utils'\nimport { Code } from '@styled-icons/material/Code'\n\ntype CodeToggleProps = {\n  config: Partial<CAll>\n  codeToggled?: boolean\n  setCodeToggled: Dispatch<SetStateAction<boolean>>\n} & (\n  | {\n      dashboard?: never\n      query?: string | number\n    }\n  | {\n      dashboard?: number\n      query?: never\n    }\n)\n\nexport const CodeToggle = ({\n  config: configOverrides,\n  query,\n  dashboard,\n  codeToggled,\n  setCodeToggled,\n}: CodeToggleProps) => {\n  const { queryId: dashboardQueryId } = useQueryIdFromDashboard(dashboard)\n  const { queryId } = useQueryId(query || dashboardQueryId)\n  const { visConfig } = useVisConfig(queryId, configOverrides)\n  const visConfigSorted = sortObjectByKeys(visConfig)\n  const visConfigToDisplay = JSON.stringify(visConfigSorted, null, 2)\n\n  return (\n    <Space reverse>\n      <IconButton\n        icon={<Code />}\n        label=\"Show code\"\n        size=\"large\"\n        toggle={codeToggled}\n        toggleBackground\n        onClick={() => setCodeToggled(!codeToggled)}\n      />\n      {codeToggled ? (\n        <StyledCopyToClipboard\n          content={visConfigToDisplay}\n          success=\"Copied to clipboard!\"\n        />\n      ) : (\n        ''\n      )}\n    </Space>\n  )\n}\n\nconst StyledCopyToClipboard = styled(CopyToClipboard)`\n  display: inline;\n`\n"],"mappings":";;;;;;;;AAIA;AAGA;AAKA;AACA;AACA;AACA;AAAkD;AAiB3C,IAAMA,UAAU,GAAG,SAAbA,UAAU,OAMA;EAAA,IALbC,eAAe,QAAvBC,MAAM;IACNC,KAAK,QAALA,KAAK;IACLC,SAAS,QAATA,SAAS;IACTC,WAAW,QAAXA,WAAW;IACXC,cAAc,QAAdA,cAAc;EAEd,4BAAsC,IAAAC,uCAAuB,EAACH,SAAS,CAAC;IAAvDI,gBAAgB,yBAAzBC,OAAO;EACf,kBAAoB,IAAAC,0BAAU,EAACP,KAAK,IAAIK,gBAAgB,CAAC;IAAjDC,OAAO,eAAPA,OAAO;EACf,oBAAsB,IAAAE,4BAAY,EAACF,OAAO,EAAER,eAAe,CAAC;IAApDW,SAAS,iBAATA,SAAS;EACjB,IAAMC,eAAe,GAAG,IAAAC,uBAAgB,EAACF,SAAS,CAAC;EACnD,IAAMG,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CAACJ,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;EAEnE,OACE,gCAAC,iBAAK;IAAC,OAAO;EAAA,GACZ,gCAAC,sBAAU;IACT,IAAI,EAAE,gCAAC,UAAI,OAAI;IACf,KAAK,EAAC,WAAW;IACjB,IAAI,EAAC,OAAO;IACZ,MAAM,EAAER,WAAY;IACpB,gBAAgB;IAChB,OAAO,EAAE;MAAA,OAAMC,cAAc,CAAC,CAACD,WAAW,CAAC;IAAA;EAAC,EAC5C,EACDA,WAAW,GACV,gCAAC,qBAAqB;IACpB,OAAO,EAAEU,kBAAmB;IAC5B,OAAO,EAAC;EAAsB,EAC9B,GAEF,EACD,CACK;AAEZ,CAAC;AAAA;AAED,IAAMG,qBAAqB,GAAG,IAAAC,4BAAM,EAACC,2BAAe,CAAC;EAAA;EAAA;AAAA,8GAEpD"}