{"version":3,"file":"useDataState.js","names":["setModelExplore","state","action","payload","model","view","fieldset","draftModelExplore","modelExplore","set","setById","id","queryInfo","byId","reducer","type","slugIdMap","slug","dashboardIdMap","dashboardId","defaultInitialState","useDataState","initialState","useReducer","dispatch","getIdFromDashboard","getIdFromSlug","getById","key","setBySlug","setByDashboardId","queryId","getModelExplore","undefined","DataState","createContainer"],"sources":["../../../src/hooks/useDataState.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { useReducer } from 'react'\nimport type { Reducer } from 'react'\nimport { createContainer } from 'unstated-next'\nimport type { ILookmlModelExploreFieldset, IQuery } from '@looker/sdk'\nimport type {\n  SDKRecord,\n  Fields,\n  Totals,\n  Pivots,\n} from '@looker/visualizations-adapters'\nimport set from 'lodash/set'\n\ntype QueryAttributes = {\n  data: SDKRecord[]\n  metadata: IQuery\n  fields: Fields\n  totals: Totals\n  pivots: Pivots\n}\n\nexport type DataStore = {\n  dashboardIdMap: Record<number, number> // { DashboardID: QueryID }\n  slugIdMap: Record<string, number> // { Slug: QueryID }\n  byId: Record<number, Partial<QueryAttributes>>\n  modelExplore: Record<string, Record<string, ILookmlModelExploreFieldset>> // { thelook: { orders: {... } }\n}\n\ntype UpdateByDashboardID = {\n  type: 'update_by_dashboard_id'\n  payload: {\n    dashboardId: number\n    id: number\n    queryInfo: Partial<QueryAttributes>\n  }\n}\n\ntype UpdateBySlug = {\n  type: 'update_by_slug'\n  payload: { slug: string; id: number; queryInfo: Partial<QueryAttributes> }\n}\n\ntype UpdateByID = {\n  type: 'update_by_id'\n  payload: { id: number; queryInfo: Partial<QueryAttributes> }\n}\n\ntype UpdateModelView = {\n  type: 'update_model_view'\n  payload: {\n    model: string\n    view: string\n    fieldset: ILookmlModelExploreFieldset\n  }\n}\n\ntype DataActionsByID = UpdateBySlug | UpdateByID | UpdateByDashboardID\n\ntype AllDataActions = DataActionsByID | UpdateModelView\n\nconst setModelExplore = (\n  state: DataStore,\n  action: UpdateModelView\n): DataStore['modelExplore'] => {\n  const { model, view, fieldset } = action.payload\n  const draftModelExplore = { ...state.modelExplore }\n  set(draftModelExplore, [model, view], fieldset)\n\n  return draftModelExplore\n}\n\nconst setById = (\n  state: DataStore,\n  action: DataActionsByID\n): DataStore['byId'] => {\n  const {\n    payload: { id, queryInfo },\n  } = action\n\n  return {\n    ...state.byId,\n    [id]: {\n      ...state.byId[id],\n      ...queryInfo,\n    },\n  }\n}\n\nconst reducer: Reducer<DataStore, AllDataActions> = (state, action) => {\n  switch (action.type) {\n    case 'update_by_slug':\n      return {\n        ...state,\n        byId: setById(state, action),\n        slugIdMap: {\n          ...state.slugIdMap,\n          [action.payload.slug]: action.payload.id,\n        },\n      }\n\n    case 'update_by_id':\n      return {\n        ...state,\n        byId: setById(state, action),\n      }\n\n    case 'update_by_dashboard_id':\n      return {\n        ...state,\n        byId: setById(state, action),\n        dashboardIdMap: {\n          ...state.dashboardIdMap,\n          [action.payload.dashboardId]: action.payload.id,\n        },\n      }\n\n    case 'update_model_view':\n      return {\n        ...state,\n        modelExplore: setModelExplore(state, action),\n      }\n\n    default:\n      return state\n  }\n}\n\nconst defaultInitialState: DataStore = {\n  byId: {},\n  dashboardIdMap: {},\n  modelExplore: {},\n  slugIdMap: {},\n}\n\n/*\n * This hook stores the data primitives used in the rest of the system.\n */\nconst useDataState = (initialState = defaultInitialState) => {\n  const [\n    { dashboardIdMap, slugIdMap, byId, modelExplore },\n    dispatch,\n  ] = useReducer(reducer, initialState)\n\n  const getIdFromDashboard = (dashboardId?: number) =>\n    dashboardId && dashboardIdMap[dashboardId]\n\n  const getIdFromSlug = (slug: string) => slugIdMap[slug]\n\n  const getById = <K extends keyof QueryAttributes>(\n    id: number,\n    key: K\n  ): Partial<QueryAttributes>[K] => byId[id]?.[key]\n\n  const setById = (id: number, queryInfo: Partial<QueryAttributes>) =>\n    dispatch({ payload: { id, queryInfo }, type: 'update_by_id' })\n\n  const setBySlug = (\n    slug: string,\n    id: number,\n    queryInfo: Partial<QueryAttributes>\n  ) => dispatch({ payload: { id, queryInfo, slug }, type: 'update_by_slug' })\n\n  const setByDashboardId = (\n    dashboardId: number,\n    queryId: number,\n    queryInfo: Partial<QueryAttributes>\n  ) => {\n    dispatch({\n      payload: { dashboardId, id: queryId, queryInfo },\n      type: 'update_by_dashboard_id',\n    })\n  }\n\n  const setModelExplore = (\n    model: string,\n    view: string,\n    fieldset: ILookmlModelExploreFieldset\n  ) =>\n    dispatch({ payload: { fieldset, model, view }, type: 'update_model_view' })\n\n  const getModelExplore = (model?: string, view?: string) =>\n    model && view ? modelExplore[model]?.[view] : undefined\n\n  return {\n    getById,\n    getIdFromDashboard,\n    getIdFromSlug,\n    getModelExplore,\n    setByDashboardId,\n    setById,\n    setBySlug,\n    setModelExplore,\n  }\n}\n\nexport const DataState = createContainer(useDataState)\n"],"mappings":"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"}