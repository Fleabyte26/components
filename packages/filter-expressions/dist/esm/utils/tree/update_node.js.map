{"version":3,"file":"update_node.js","names":["updateNode","root","nodeId","updateProps","id","_objectSpread","node","left","right"],"sources":["../../../../src/utils/tree/update_node.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode } from '../../types';\n\n/**\n * Traverses the Filter AST looking for a node with id = nodeId and applies updateProps to it\n */\nexport const updateNode = (\n  root: FilterASTNode,\n  nodeId: number,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updateProps: any\n): FilterASTNode => {\n  if (root.id === nodeId) {\n    return { ...root, ...updateProps };\n  }\n\n  let node: FilterASTNode | undefined = root;\n  while (node) {\n    const { left, right } = node;\n    if (left && left.id === nodeId) {\n      node.left = { ...left, ...updateProps };\n      return root;\n    }\n\n    if (right && right.id === nodeId) {\n      node.right = { ...right, ...updateProps };\n      return root;\n    }\n\n    node = node.right;\n  }\n  return root;\n};\n"],"mappings":";;;;;AASA,OAAO,MAAMA,UAAU,GAAGA,CACxBC,IAAmB,EACnBC,MAAc,EAEdC,WAAgB,KACE;EAClB,IAAIF,IAAI,CAACG,EAAE,KAAKF,MAAM,EAAE;IACtB,OAAAG,aAAA,CAAAA,aAAA,KAAYJ,IAAI,GAAKE,WAAW;EAClC;EAEA,IAAIG,IAA+B,GAAGL,IAAI;EAC1C,OAAOK,IAAI,EAAE;IACX,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,IAAI;IAC5B,IAAIC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKF,MAAM,EAAE;MAC9BI,IAAI,CAACC,IAAI,GAAAF,aAAA,CAAAA,aAAA,KAAQE,IAAI,GAAKJ,WAAW,CAAE;MACvC,OAAOF,IAAI;IACb;IAEA,IAAIO,KAAK,IAAIA,KAAK,CAACJ,EAAE,KAAKF,MAAM,EAAE;MAChCI,IAAI,CAACE,KAAK,GAAAH,aAAA,CAAAA,aAAA,KAAQG,KAAK,GAAKL,WAAW,CAAE;MACzC,OAAOF,IAAI;IACb;IAEAK,IAAI,GAAGA,IAAI,CAACE,KAAK;EACnB;EACA,OAAOP,IAAI;AACb,CAAC"}