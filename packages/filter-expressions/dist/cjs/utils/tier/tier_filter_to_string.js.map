{"version":3,"file":"tier_filter_to_string.js","names":["_flow","_interopRequireDefault","require","_quote_filter","_is_item_to_string","_user_attribute_to_string","_escape_parameter_value","_tree_to_list","obj","__esModule","matchToString","_ref","_","field","value","is","isItemToString","map","val","has_allowed_values","parameter","escapeParameterValue","quoteFilter","join","concat","anyvalueToString","filterToStringMap","anyvalue","match","user_attribute","userAttributeToString","serializeTierItem","type","item","toStringFunction","listToExpression","items","tierFilterToString","root","flow","treeToList","exports"],"sources":["../../../../src/utils/tier/tier_filter_to_string.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { ILookmlModelExploreField } from '@looker/sdk';\nimport flow from 'lodash/fp/flow';\nimport type {\n  FilterASTNode,\n  FilterExpressionType,\n  FilterItemToStringFunction,\n  FilterItemToStringMapType,\n  FilterModel,\n} from '../..';\nimport { quoteFilter } from '../string/quote_filter';\nimport isItemToString from '../to_string/is_item_to_string';\nimport { userAttributeToString } from '../user_attribute/user_attribute_to_string';\nimport { escapeParameterValue } from './escape_parameter_value';\nimport { treeToList } from '../tree/tree_to_list';\n\nconst matchToString = (\n  { value, is }: FilterModel,\n  _?: string,\n  field?: ILookmlModelExploreField | null\n) => {\n  return (\n    isItemToString(is, '', '-') +\n    value\n      .map((val: string) =>\n        field?.has_allowed_values && field?.parameter\n          ? escapeParameterValue(val)\n          : quoteFilter(val)\n      )\n      .join(`,${isItemToString(is, '', '-')}`)\n  );\n};\n\nconst anyvalueToString = () => '';\n\nconst filterToStringMap: FilterItemToStringMapType = {\n  anyvalue: anyvalueToString,\n  match: matchToString,\n  user_attribute: userAttributeToString,\n};\n\nconst serializeTierItem =\n  (type: FilterExpressionType, field?: ILookmlModelExploreField) =>\n  (item: FilterModel): string => {\n    const toStringFunction: FilterItemToStringFunction =\n      filterToStringMap[item.type];\n    return toStringFunction?.(item, type, field) || '';\n  };\n/**\n * Maps a FilterItem to a function for converting it to an expression\n */\n\nconst listToExpression =\n  (type: FilterExpressionType, field?: ILookmlModelExploreField) =>\n  (items: FilterModel[]) =>\n    items.map(serializeTierItem(type, field)).join(',');\n\n/**\n * Converts the AST to an array of FilterItems and then\n * converts each item into its expression representation\n */\nexport const tierFilterToString = (\n  root: FilterASTNode,\n  type: FilterExpressionType,\n  field?: ILookmlModelExploreField\n): string => flow(treeToList, listToExpression(type, field))(root);\n"],"mappings":";;;;;;AAKA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAQA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,yBAAA,GAAAH,OAAA;AACA,IAAAI,uBAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAAkD,SAAAD,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAElD,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAEjBC,CAAU,EACVC,KAAuC,EACpC;EAAA,IAHDC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,EAAE,GAAAJ,IAAA,CAAFI,EAAE;EAIX,OACE,IAAAC,6BAAc,EAACD,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAC3BD,KAAK,CACFG,GAAG,CAAC,UAACC,GAAW;IAAA,OACfL,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEM,kBAAkB,IAAIN,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEO,SAAS,GACzC,IAAAC,4CAAoB,EAACH,GAAG,CAAC,GACzB,IAAAI,yBAAW,EAACJ,GAAG,CAAC;EAAA,CACtB,CAAC,CACAK,IAAI,KAAAC,MAAA,CAAK,IAAAR,6BAAc,EAACD,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAE,CAAC;AAE9C,CAAC;AAED,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;EAAA,OAAS,EAAE;AAAA;AAEjC,IAAMC,iBAA4C,GAAG;EACnDC,QAAQ,EAAEF,gBAAgB;EAC1BG,KAAK,EAAElB,aAAa;EACpBmB,cAAc,EAAEC;AAClB,CAAC;AAED,IAAMC,iBAAiB,GACrB,SADIA,iBAAiBA,CACpBC,IAA0B,EAAEnB,KAAgC;EAAA,OAC7D,UAACoB,IAAiB,EAAa;IAC7B,IAAMC,gBAA4C,GAChDR,iBAAiB,CAACO,IAAI,CAACD,IAAI,CAAC;IAC9B,OAAO,CAAAE,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAGD,IAAI,EAAED,IAAI,EAAEnB,KAAK,CAAC,KAAI,EAAE;EACpD,CAAC;AAAA;AAKH,IAAMsB,gBAAgB,GACpB,SADIA,gBAAgBA,CACnBH,IAA0B,EAAEnB,KAAgC;EAAA,OAC7D,UAACuB,KAAoB;IAAA,OACnBA,KAAK,CAACnB,GAAG,CAACc,iBAAiB,CAACC,IAAI,EAAEnB,KAAK,CAAC,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC;EAAA;AAAA;AAMhD,IAAMc,kBAAkB,GAAG,SAArBA,kBAAkBA,CAC7BC,IAAmB,EACnBN,IAA0B,EAC1BnB,KAAgC;EAAA,OACrB,IAAA0B,gBAAI,EAACC,wBAAU,EAAEL,gBAAgB,CAACH,IAAI,EAAEnB,KAAK,CAAC,CAAC,CAACyB,IAAI,CAAC;AAAA;AAACG,OAAA,CAAAJ,kBAAA,GAAAA,kBAAA"}