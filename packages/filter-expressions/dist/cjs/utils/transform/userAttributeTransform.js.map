{"version":3,"file":"userAttributeTransform.js","names":["_types","require","_user_attribute","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","updateAttributeValue","node","userAttributes","type","TYPE_USER_ATTRIBUTE","userAttribute","findUserAttribute","attributeName","attributeValue","userAttributeTransform","root","workingRoot","pointer","right","left","exports"],"sources":["../../../../src/utils/transform/userAttributeTransform.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode, UserAttributeWithValue } from '../../types';\nimport { TYPE_USER_ATTRIBUTE } from '../../types';\nimport { findUserAttribute } from '../user_attribute';\n\n/**\n * sets the userAttributeValue on a node with type 'user_attribute'\n */\nconst updateAttributeValue = (\n  node: FilterASTNode,\n  userAttributes: UserAttributeWithValue[]\n): FilterASTNode => {\n  if (node && node.type === TYPE_USER_ATTRIBUTE) {\n    const userAttribute = findUserAttribute(node.attributeName, userAttributes);\n    return {\n      ...node,\n      attributeValue: userAttribute && userAttribute.value,\n    } as FilterASTNode;\n  }\n  return node;\n};\n\n/**\n * Traverses ast and updates userAttribute value\n */\nexport const userAttributeTransform =\n  (userAttributes?: UserAttributeWithValue[]) =>\n  (root: FilterASTNode): FilterASTNode => {\n    if (!userAttributes || !userAttributes.length) return root;\n\n    const workingRoot = updateAttributeValue(root, userAttributes);\n    let pointer = workingRoot;\n    while (pointer.right) {\n      pointer.left =\n        pointer.left && updateAttributeValue(pointer.left, userAttributes);\n      pointer.right = updateAttributeValue(pointer.right, userAttributes);\n      pointer = pointer.right;\n    }\n    return workingRoot;\n  };\n"],"mappings":"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"}