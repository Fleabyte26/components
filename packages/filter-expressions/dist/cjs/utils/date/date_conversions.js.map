{"version":3,"file":"date_conversions.js","names":["dateToFilterDateTimeModel","date","arguments","length","undefined","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","exports","filterDateTimeModelToDate","_ref","_ref$hour","_ref$minute","_ref$second","addDays","days","result","setDate","clearTimeFilterDateTimeModel","model","hasTimeFilterDateTimeModel"],"sources":["../../../../src/utils/date/date_conversions.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterDateTimeModel } from '../../types';\n\nexport const dateToFilterDateTimeModel = (date: Date = new Date()) => ({\n  year: date.getFullYear(),\n  month: date.getMonth() + 1,\n  day: date.getDate(),\n  hour: date.getHours(),\n  minute: date.getMinutes(),\n  second: date.getSeconds(),\n});\n\nexport const filterDateTimeModelToDate = ({\n  year,\n  month,\n  day,\n  hour = 0,\n  minute = 0,\n  second = 0,\n}: FilterDateTimeModel) => new Date(year, month - 1, day, hour, minute, second);\n\nexport const addDays = (date: Date, days: number) => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\n/**\n * Removes time (hour, minute and second) part from the filter date time model.\n * @param model The filter date time model to remove time part from.\n */\nexport const clearTimeFilterDateTimeModel = (model: FilterDateTimeModel) => ({\n  year: model.year,\n  month: model.month,\n  day: model.day,\n});\n\n/**\n * Returns true if model has defined time (hour, minute and second) part.\n * @param model The filter date time model to check defined time part from.\n */\nexport const hasTimeFilterDateTimeModel = (\n  model: FilterDateTimeModel | undefined\n) =>\n  model !== undefined &&\n  model.hour !== undefined &&\n  model.minute !== undefined &&\n  model.second !== undefined;\n"],"mappings":";;;;;;AAMO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA;EAAA,IAAIC,IAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAIG,IAAI,CAAC,CAAC;EAAA,OAAM;IACrEC,IAAI,EAAEL,IAAI,CAACM,WAAW,CAAC,CAAC;IACxBC,KAAK,EAAEP,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC1BC,GAAG,EAAET,IAAI,CAACU,OAAO,CAAC,CAAC;IACnBC,IAAI,EAAEX,IAAI,CAACY,QAAQ,CAAC,CAAC;IACrBC,MAAM,EAAEb,IAAI,CAACc,UAAU,CAAC,CAAC;IACzBC,MAAM,EAAEf,IAAI,CAACgB,UAAU,CAAC;EAC1B,CAAC;AAAA,CAAC;AAACC,OAAA,CAAAlB,yBAAA,GAAAA,yBAAA;AAEI,IAAMmB,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAAC,IAAA;EAAA,IACpCd,IAAI,GAAAc,IAAA,CAAJd,IAAI;IACJE,KAAK,GAAAY,IAAA,CAALZ,KAAK;IACLE,GAAG,GAAAU,IAAA,CAAHV,GAAG;IAAAW,SAAA,GAAAD,IAAA,CACHR,IAAI;IAAJA,IAAI,GAAAS,SAAA,cAAG,CAAC,GAAAA,SAAA;IAAAC,WAAA,GAAAF,IAAA,CACRN,MAAM;IAANA,MAAM,GAAAQ,WAAA,cAAG,CAAC,GAAAA,WAAA;IAAAC,WAAA,GAAAH,IAAA,CACVJ,MAAM;IAANA,MAAM,GAAAO,WAAA,cAAG,CAAC,GAAAA,WAAA;EAAA,OACe,IAAIlB,IAAI,CAACC,IAAI,EAAEE,KAAK,GAAG,CAAC,EAAEE,GAAG,EAAEE,IAAI,EAAEE,MAAM,EAAEE,MAAM,CAAC;AAAA;AAACE,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAEzE,IAAMK,OAAO,GAAG,SAAVA,OAAOA,CAAIvB,IAAU,EAAEwB,IAAY,EAAK;EACnD,IAAMC,MAAM,GAAG,IAAIrB,IAAI,CAACJ,IAAI,CAAC;EAC7ByB,MAAM,CAACC,OAAO,CAACD,MAAM,CAACf,OAAO,CAAC,CAAC,GAAGc,IAAI,CAAC;EACvC,OAAOC,MAAM;AACf,CAAC;AAACR,OAAA,CAAAM,OAAA,GAAAA,OAAA;AAMK,IAAMI,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAIC,KAA0B;EAAA,OAAM;IAC3EvB,IAAI,EAAEuB,KAAK,CAACvB,IAAI;IAChBE,KAAK,EAAEqB,KAAK,CAACrB,KAAK;IAClBE,GAAG,EAAEmB,KAAK,CAACnB;EACb,CAAC;AAAA,CAAC;AAACQ,OAAA,CAAAU,4BAAA,GAAAA,4BAAA;AAMI,IAAME,0BAA0B,GAAG,SAA7BA,0BAA0BA,CACrCD,KAAsC;EAAA,OAEtCA,KAAK,KAAKzB,SAAS,IACnByB,KAAK,CAACjB,IAAI,KAAKR,SAAS,IACxByB,KAAK,CAACf,MAAM,KAAKV,SAAS,IAC1ByB,KAAK,CAACb,MAAM,KAAKZ,SAAS;AAAA;AAACc,OAAA,CAAAY,0BAAA,GAAAA,0BAAA"}