{"version":3,"file":"has_matches_advanced_node.js","names":["_any","_interopRequireDefault","require","_flow","_tree","obj","__esModule","isMatchesAdvancedItem","subTypes","_ref","type","indexOf","hasMatchesAdvancedNode","flow","treeToList","any","exports"],"sources":["../../../src/utils/has_matches_advanced_node.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport any from 'lodash/fp/any';\nimport flow from 'lodash/fp/flow';\nimport type { FilterModel } from '../types';\nimport { treeToList } from './tree';\n\nconst isMatchesAdvancedItem =\n  (subTypes: readonly string[]) =>\n  ({ type }: FilterModel) =>\n    type === 'matchesAdvanced' || subTypes.indexOf(type) === -1;\n\n/**\n * checks if the ast has:\n * - any node that displays as MatchesAdvanced\n * - any node of type 'matchesAdvanced'\n */\nexport const hasMatchesAdvancedNode = (subTypes: readonly string[]) =>\n  flow([treeToList, any(isMatchesAdvancedItem(subTypes))]);\n"],"mappings":";;;;;;AAIA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,KAAA,GAAAF,OAAA;AAAoC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAEpC,IAAME,qBAAqB,GACzB,SADIA,qBAAqBA,CACxBC,QAA2B;EAAA,OAC5B,UAAAC,IAAA;IAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAA,OACLA,IAAI,KAAK,iBAAiB,IAAIF,QAAQ,CAACG,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC;EAAA;AAAA;AAOxD,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIJ,QAA2B;EAAA,OAChE,IAAAK,gBAAI,EAAC,CAACC,gBAAU,EAAE,IAAAC,eAAG,EAACR,qBAAqB,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAAA;AAACQ,OAAA,CAAAJ,sBAAA,GAAAA,sBAAA"}