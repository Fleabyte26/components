{"version":3,"file":"tree_to_string.js","names":["_tree_to_list","require","treeToString","root","nodeToString","filterNode","arguments","length","undefined","treeToList","filter","map","String","join","exports"],"sources":["../../../../src/utils/tree/tree_to_string.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode, FilterModel } from '../../types';\nimport { treeToList } from './tree_to_list';\n\n/**\n * Given an AST and a nodeToString conversion function for that particular\n * type of filter, it converts the AST to a string expression representation\n */\nexport const treeToString = (\n  root: FilterASTNode,\n  nodeToString: (item: FilterModel) => string,\n  filterNode: (item: FilterModel) => boolean = () => true\n) =>\n  treeToList(root)\n    .filter(filterNode)\n    .map(nodeToString)\n    .filter(String)\n    .join(',');\n"],"mappings":";;;;;;AAKA,IAAAA,aAAA,GAAAC,OAAA;AAMO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CACvBC,IAAmB,EACnBC,YAA2C;EAAA,IAC3CC,UAA0C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAA,OAAM,IAAI;EAAA;EAAA,OAEvD,IAAAG,wBAAU,EAACN,IAAI,CAAC,CACbO,MAAM,CAACL,UAAU,CAAC,CAClBM,GAAG,CAACP,YAAY,CAAC,CACjBM,MAAM,CAACE,MAAM,CAAC,CACdC,IAAI,CAAC,GAAG,CAAC;AAAA;AAACC,OAAA,CAAAZ,YAAA,GAAAA,YAAA"}