{"version":3,"file":"location_to_string.js","names":["_tree_to_string","require","_user_attribute_to_string","locationExactToString","_ref","lat","lon","concat","circleToString","_ref2","distance","unit","boxToString","_ref3","lon1","lat1","anyvalue","nullToString","notNullToString","filterToStringMap","location","circle","box","notnull","user_attribute","userAttributeToString","locationToExpression","item","toStringFunction","type","locationToString","root","treeToString","exports"],"sources":["../../../../src/utils/location/location_to_string.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type {\n  FilterASTNode,\n  FilterItemToStringMapType,\n  FilterModel,\n} from '../../types';\nimport { treeToString } from '../tree/tree_to_string';\nimport { userAttributeToString } from '../user_attribute/user_attribute_to_string';\n\nconst locationExactToString = ({ lat, lon }: FilterModel): string =>\n  lat && lon ? `${lat}, ${lon}` : '';\n\nconst circleToString = ({ distance, unit, lat, lon }: FilterModel): string =>\n  distance && unit && lat && lon\n    ? `${distance} ${unit} from ${lat}, ${lon}`\n    : '';\n\nconst boxToString = ({ lon, lat, lon1, lat1 }: FilterModel): string =>\n  lon && lat && lon1 && lat1\n    ? `inside box from ${lat}, ${lon} to ${lat1}, ${lon1}`\n    : '';\n\nconst anyvalue = () => '';\n\nconst nullToString = () => 'null';\n\nconst notNullToString = () => '-null';\n\nconst filterToStringMap: FilterItemToStringMapType = {\n  location: locationExactToString,\n  circle: circleToString,\n  box: boxToString,\n  anyvalue,\n  null: nullToString,\n  notnull: notNullToString,\n  user_attribute: userAttributeToString,\n};\n\nconst locationToExpression = (item: FilterModel): string => {\n  const toStringFunction = filterToStringMap[item.type];\n  return toStringFunction?.(item) || '';\n};\n\nexport const locationToString = (root: FilterASTNode) =>\n  treeToString(root, locationToExpression);\n"],"mappings":";;;;;;AASA,IAAAA,eAAA,GAAAC,OAAA;AACA,IAAAC,yBAAA,GAAAD,OAAA;AAEA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA;EAAA,IAAMC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;EAAA,OACvCD,GAAG,IAAIC,GAAG,MAAAC,MAAA,CAAMF,GAAG,QAAAE,MAAA,CAAKD,GAAG,IAAK,EAAE;AAAA;AAEpC,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA;EAAA,IAAMC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;IAAEN,GAAG,GAAAI,KAAA,CAAHJ,GAAG;IAAEC,GAAG,GAAAG,KAAA,CAAHH,GAAG;EAAA,OAChDI,QAAQ,IAAIC,IAAI,IAAIN,GAAG,IAAIC,GAAG,MAAAC,MAAA,CACvBG,QAAQ,OAAAH,MAAA,CAAII,IAAI,YAAAJ,MAAA,CAASF,GAAG,QAAAE,MAAA,CAAKD,GAAG,IACvC,EAAE;AAAA;AAER,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAAC,KAAA;EAAA,IAAMP,GAAG,GAAAO,KAAA,CAAHP,GAAG;IAAED,GAAG,GAAAQ,KAAA,CAAHR,GAAG;IAAES,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;EAAA,OACzCT,GAAG,IAAID,GAAG,IAAIS,IAAI,IAAIC,IAAI,sBAAAR,MAAA,CACHF,GAAG,QAAAE,MAAA,CAAKD,GAAG,UAAAC,MAAA,CAAOQ,IAAI,QAAAR,MAAA,CAAKO,IAAI,IAClD,EAAE;AAAA;AAER,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAS,EAAE;AAAA;AAEzB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA;EAAA,OAAS,MAAM;AAAA;AAEjC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA;EAAA,OAAS,OAAO;AAAA;AAErC,IAAMC,iBAA4C,GAAG;EACnDC,QAAQ,EAAEjB,qBAAqB;EAC/BkB,MAAM,EAAEb,cAAc;EACtBc,GAAG,EAAEV,WAAW;EAChBI,QAAQ,EAARA,QAAQ;EACR,QAAMC,YAAY;EAClBM,OAAO,EAAEL,eAAe;EACxBM,cAAc,EAAEC;AAClB,CAAC;AAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,IAAiB,EAAa;EAC1D,IAAMC,gBAAgB,GAAGT,iBAAiB,CAACQ,IAAI,CAACE,IAAI,CAAC;EACrD,OAAO,CAAAD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAGD,IAAI,CAAC,KAAI,EAAE;AACvC,CAAC;AAEM,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAmB;EAAA,OAClD,IAAAC,4BAAY,EAACD,IAAI,EAAEL,oBAAoB,CAAC;AAAA;AAACO,OAAA,CAAAH,gBAAA,GAAAA,gBAAA"}