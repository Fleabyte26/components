{"version":3,"file":"index.spec.js","names":["saga","jest","mock","useSelector","fn","test","useSaga","useSlice","mockUseSaga","mockUseSelector","mockUseSlice","slice","createSlice","initialState","name","reducers","beforeEach","clearAllMocks","renderHook","useStoreState","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","state","result","current","toEqual","mockImplementation","toBe","getInitialState"],"sources":["../../../src/useStoreState/index.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { renderHook } from '@testing-library/react-hooks'\nimport { createSlice } from '@reduxjs/toolkit'\nimport { useSelector } from 'react-redux'\nimport { useStoreState } from '.'\nimport { useSaga } from '../useSaga'\nimport { useSlice } from '../useSlice'\n\njest.mock('react-redux', () => ({\n  useSelector: jest.fn((fn: (state: any) => any) =>\n    fn({ test: { test: true } })\n  ),\n}))\n\njest.mock('../useSaga', () => ({\n  useSaga: jest.fn(),\n}))\n\njest.mock('../useSlice', () => ({\n  useSlice: jest.fn(),\n}))\n\nconst mockUseSaga = useSaga as jest.Mock\nconst mockUseSelector = useSelector as jest.Mock\nconst mockUseSlice = useSlice as jest.Mock\n\nfunction* saga() {}\n\nconst slice = createSlice({\n  initialState: { test: false },\n  name: 'test',\n  reducers: {},\n})\n\nbeforeEach(() => {\n  jest.clearAllMocks()\n})\n\ntest('calls useSlice', () => {\n  renderHook(() => useStoreState(slice))\n  expect(mockUseSlice).toHaveBeenCalledTimes(1)\n  expect(mockUseSlice).toHaveBeenCalledWith(slice)\n})\n\ntest('calls useSaga', () => {\n  renderHook(() => useStoreState(slice, saga))\n  expect(mockUseSaga).toHaveBeenCalledTimes(1)\n  expect(mockUseSaga).toHaveBeenCalledWith(saga)\n})\n\ntest('calls useSelector', () => {\n  renderHook(() => useStoreState(slice))\n  expect(mockUseSelector).toHaveBeenCalledTimes(1)\n})\n\ntest('returns the store state', () => {\n  const state = renderHook(() => useStoreState(slice))\n  expect(state.result.current).toEqual({ test: true })\n})\n\ntest('returns initial state if selector returns nothing', () => {\n  mockUseSelector.mockImplementation(fn => fn({}))\n  const state = renderHook(() => useStoreState(slice))\n  expect(state.result.current).toBe(slice.getInitialState())\n})\n"],"mappings":"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"}