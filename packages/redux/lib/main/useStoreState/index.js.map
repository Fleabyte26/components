{"version":3,"file":"index.js","names":["useStoreState","slice","saga","useSaga","useSlice","useSelector","state","get","name","getInitialState"],"sources":["../../../src/useStoreState/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Slice } from '@reduxjs/toolkit'\nimport { useSelector } from 'react-redux'\nimport type { Saga } from 'redux-saga'\nimport { useSaga } from '../useSaga'\nimport { useSlice } from '../useSlice'\nimport get from 'lodash/get'\n\n/**\n * Adds a saga and slice to the nearest store and returns the root state for the slice.\n *\n * @param slice The slice containing reducers to register on the nearest store.\n * @param saga The saga to register on the nearest store.\n */\nexport const useStoreState = <SliceState>(slice: Slice, saga?: Saga) => {\n  useSaga(saga)\n  useSlice(slice)\n  return useSelector(\n    (state: any): SliceState => get(state, slice.name, slice.getInitialState())\n  )\n}\n"],"mappings":";;;;;;;AAMA;AAEA;AACA;AACA;;AAQO,IAAMA,aAAa,GAAG,SAAhBA,aAAa,CAAgBC,KAAY,EAAEC,IAAW,EAAK;EACtE,IAAAC,gBAAO,EAACD,IAAI,CAAC;EACb,IAAAE,kBAAQ,EAACH,KAAK,CAAC;EACf,OAAO,IAAAI,uBAAW,EAChB,UAACC,KAAU;IAAA,OAAiB,IAAAC,eAAG,EAACD,KAAK,EAAEL,KAAK,CAACO,IAAI,EAAEP,KAAK,CAACQ,eAAe,EAAE,CAAC;EAAA,EAC5E;AACH,CAAC;AAAA"}