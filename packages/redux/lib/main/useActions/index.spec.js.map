{"version":3,"file":"index.spec.js","names":["jest","mock","useDispatch","fn","bindActionCreators","boundActionCreators","dispatch","sliceOptions","initialState","name","reducers","test","beforeEach","mockReset","mockReturnValue","slice","createSlice","renderHook","useActions","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","slice1","slice2","actions","result","current","toBe"],"sources":["../../../src/useActions/index.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { createSlice } from '@reduxjs/toolkit'\nimport { renderHook } from '@testing-library/react-hooks'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { useActions } from '.'\n\njest.mock('react-redux', () => ({\n  useDispatch: jest.fn(),\n}))\n\njest.mock('redux', () => ({\n  bindActionCreators: jest.fn(),\n}))\n\nconst boundActionCreators = {}\nconst dispatch = () => {}\nconst sliceOptions = {\n  initialState: {},\n  name: 'test',\n  reducers: {\n    test() {},\n  },\n}\n\nbeforeEach(() => {\n  // @ts-ignore\n  useDispatch.mockReset().mockReturnValue(dispatch)\n\n  // @ts-ignore\n  bindActionCreators.mockReset().mockReturnValue(boundActionCreators)\n})\n\ntest('calls dispatch', () => {\n  const slice = createSlice(sliceOptions)\n  renderHook(() => useActions(slice))\n  expect(useDispatch).toHaveBeenCalledTimes(1)\n  expect(useDispatch).toHaveBeenCalledWith()\n})\n\ntest('calls bindActionCreators only once for each slice', () => {\n  const slice1 = createSlice(sliceOptions)\n  const slice2 = createSlice(sliceOptions)\n\n  // First call should be called.\n  renderHook(() => useActions(slice1))\n  expect(bindActionCreators).toHaveBeenCalledTimes(1)\n\n  // Second call should not be called.\n  renderHook(() => useActions(slice1))\n  expect(bindActionCreators).toHaveBeenCalledTimes(1)\n\n  // @ts-ignore we don't care about the type of dispatch in our testing.\n  expect(bindActionCreators).toHaveBeenCalledWith(slice1.actions, dispatch)\n\n  // Third call, but with a different slice should be called.\n  renderHook(() => useActions(slice2))\n  expect(bindActionCreators).toHaveBeenCalledTimes(2)\n\n  // @ts-ignore we don't care about the type of dispatch in our testing.\n  expect(bindActionCreators).toHaveBeenCalledWith(slice2.actions, dispatch)\n})\n\ntest('returns result of bindActionCreators', () => {\n  const slice = createSlice(sliceOptions)\n  const actions = renderHook(() => useActions(slice))\n  expect(actions.result.current).toBe(boundActionCreators)\n})\n"],"mappings":";;AAKA;AACA;AACA;AACA;AACA;;AAEAA,IAAI,CAACC,IAAI,CAAC,aAAa,EAAE;EAAA,OAAO;IAC9BC,WAAW,EAAEF,IAAI,CAACG,EAAE;EACtB,CAAC;AAAA,CAAC,CAAC;AAEHH,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE;EAAA,OAAO;IACxBG,kBAAkB,EAAEJ,IAAI,CAACG,EAAE;EAC7B,CAAC;AAAA,CAAC,CAAC;AAEH,IAAME,mBAAmB,GAAG,CAAC,CAAC;AAC9B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS,CAAC,CAAC;AACzB,IAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,CAAC,CAAC;EAChBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE;IACRC,IAAI,kBAAG,CAAC;EACV;AACF,CAAC;AAEDC,UAAU,CAAC,YAAM;EAEfV,uBAAW,CAACW,SAAS,EAAE,CAACC,eAAe,CAACR,QAAQ,CAAC;;EAGjDF,yBAAkB,CAACS,SAAS,EAAE,CAACC,eAAe,CAACT,mBAAmB,CAAC;AACrE,CAAC,CAAC;AAEFM,IAAI,CAAC,gBAAgB,EAAE,YAAM;EAC3B,IAAMI,KAAK,GAAG,IAAAC,oBAAW,EAACT,YAAY,CAAC;EACvC,IAAAU,sBAAU,EAAC;IAAA,OAAM,IAAAC,YAAU,EAACH,KAAK,CAAC;EAAA,EAAC;EACnCI,MAAM,CAACjB,uBAAW,CAAC,CAACkB,qBAAqB,CAAC,CAAC,CAAC;EAC5CD,MAAM,CAACjB,uBAAW,CAAC,CAACmB,oBAAoB,EAAE;AAC5C,CAAC,CAAC;AAEFV,IAAI,CAAC,mDAAmD,EAAE,YAAM;EAC9D,IAAMW,MAAM,GAAG,IAAAN,oBAAW,EAACT,YAAY,CAAC;EACxC,IAAMgB,MAAM,GAAG,IAAAP,oBAAW,EAACT,YAAY,CAAC;;EAGxC,IAAAU,sBAAU,EAAC;IAAA,OAAM,IAAAC,YAAU,EAACI,MAAM,CAAC;EAAA,EAAC;EACpCH,MAAM,CAACf,yBAAkB,CAAC,CAACgB,qBAAqB,CAAC,CAAC,CAAC;;EAGnD,IAAAH,sBAAU,EAAC;IAAA,OAAM,IAAAC,YAAU,EAACI,MAAM,CAAC;EAAA,EAAC;EACpCH,MAAM,CAACf,yBAAkB,CAAC,CAACgB,qBAAqB,CAAC,CAAC,CAAC;;EAGnDD,MAAM,CAACf,yBAAkB,CAAC,CAACiB,oBAAoB,CAACC,MAAM,CAACE,OAAO,EAAElB,QAAQ,CAAC;;EAGzE,IAAAW,sBAAU,EAAC;IAAA,OAAM,IAAAC,YAAU,EAACK,MAAM,CAAC;EAAA,EAAC;EACpCJ,MAAM,CAACf,yBAAkB,CAAC,CAACgB,qBAAqB,CAAC,CAAC,CAAC;;EAGnDD,MAAM,CAACf,yBAAkB,CAAC,CAACiB,oBAAoB,CAACE,MAAM,CAACC,OAAO,EAAElB,QAAQ,CAAC;AAC3E,CAAC,CAAC;AAEFK,IAAI,CAAC,sCAAsC,EAAE,YAAM;EACjD,IAAMI,KAAK,GAAG,IAAAC,oBAAW,EAACT,YAAY,CAAC;EACvC,IAAMiB,OAAO,GAAG,IAAAP,sBAAU,EAAC;IAAA,OAAM,IAAAC,YAAU,EAACH,KAAK,CAAC;EAAA,EAAC;EACnDI,MAAM,CAACK,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAACtB,mBAAmB,CAAC;AAC1D,CAAC,CAAC"}