{"version":3,"file":"index.js","names":["useSelector","useSaga","useSlice","get","useStoreState","slice","saga","state","name","getInitialState"],"sources":["../../../src/useStoreState/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Slice } from '@reduxjs/toolkit'\nimport { useSelector } from 'react-redux'\nimport type { Saga } from 'redux-saga'\nimport { useSaga } from '../useSaga'\nimport { useSlice } from '../useSlice'\nimport get from 'lodash/get'\n\n/**\n * Adds a saga and slice to the nearest store and returns the root state for the slice.\n *\n * @param slice The slice containing reducers to register on the nearest store.\n * @param saga The saga to register on the nearest store.\n */\nexport const useStoreState = <SliceState>(slice: Slice, saga?: Saga) => {\n  useSaga(saga)\n  useSlice(slice)\n  return useSelector(\n    (state: any): SliceState => get(state, slice.name, slice.getInitialState())\n  )\n}\n"],"mappings":";;AAMA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,GAAG,MAAM,YAAY;;AAQ5B,OAAO,MAAMC,aAAa,GAAG,CAAaC,KAAY,EAAEC,IAAW,KAAK;EACtEL,OAAO,CAACK,IAAI,CAAC;EACbJ,QAAQ,CAACG,KAAK,CAAC;EACf,OAAOL,WAAW,CACfO,KAAU,IAAiBJ,GAAG,CAACI,KAAK,EAAEF,KAAK,CAACG,IAAI,EAAEH,KAAK,CAACI,eAAe,EAAE,CAAC,CAC5E;AACH,CAAC"}