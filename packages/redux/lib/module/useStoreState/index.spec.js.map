{"version":3,"file":"index.spec.js","names":["renderHook","createSlice","useSelector","useStoreState","useSaga","useSlice","jest","mock","fn","test","mockUseSaga","mockUseSelector","mockUseSlice","saga","slice","initialState","name","reducers","beforeEach","clearAllMocks","expect","toHaveBeenCalledTimes","toHaveBeenCalledWith","state","result","current","toEqual","mockImplementation","toBe","getInitialState"],"sources":["../../../src/useStoreState/index.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { renderHook } from '@testing-library/react-hooks'\nimport { createSlice } from '@reduxjs/toolkit'\nimport { useSelector } from 'react-redux'\nimport { useStoreState } from '.'\nimport { useSaga } from '../useSaga'\nimport { useSlice } from '../useSlice'\n\njest.mock('react-redux', () => ({\n  useSelector: jest.fn((fn: (state: any) => any) =>\n    fn({ test: { test: true } })\n  ),\n}))\n\njest.mock('../useSaga', () => ({\n  useSaga: jest.fn(),\n}))\n\njest.mock('../useSlice', () => ({\n  useSlice: jest.fn(),\n}))\n\nconst mockUseSaga = useSaga as jest.Mock\nconst mockUseSelector = useSelector as jest.Mock\nconst mockUseSlice = useSlice as jest.Mock\n\nfunction* saga() {}\n\nconst slice = createSlice({\n  initialState: { test: false },\n  name: 'test',\n  reducers: {},\n})\n\nbeforeEach(() => {\n  jest.clearAllMocks()\n})\n\ntest('calls useSlice', () => {\n  renderHook(() => useStoreState(slice))\n  expect(mockUseSlice).toHaveBeenCalledTimes(1)\n  expect(mockUseSlice).toHaveBeenCalledWith(slice)\n})\n\ntest('calls useSaga', () => {\n  renderHook(() => useStoreState(slice, saga))\n  expect(mockUseSaga).toHaveBeenCalledTimes(1)\n  expect(mockUseSaga).toHaveBeenCalledWith(saga)\n})\n\ntest('calls useSelector', () => {\n  renderHook(() => useStoreState(slice))\n  expect(mockUseSelector).toHaveBeenCalledTimes(1)\n})\n\ntest('returns the store state', () => {\n  const state = renderHook(() => useStoreState(slice))\n  expect(state.result.current).toEqual({ test: true })\n})\n\ntest('returns initial state if selector returns nothing', () => {\n  mockUseSelector.mockImplementation(fn => fn({}))\n  const state = renderHook(() => useStoreState(slice))\n  expect(state.result.current).toBe(slice.getInitialState())\n})\n"],"mappings":";;AAKA,SAASA,UAAU,QAAQ,8BAA8B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,GAAG;AACjC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,QAAQ,QAAQ,aAAa;AAEtCC,IAAI,CAACC,IAAI,CAAC,aAAa,EAAE,OAAO;EAC9BL,WAAW,EAAEI,IAAI,CAACE,EAAE,CAAEA,EAAuB,IAC3CA,EAAE,CAAC;IAAEC,IAAI,EAAE;MAAEA,IAAI,EAAE;IAAK;EAAE,CAAC,CAAC;AAEhC,CAAC,CAAC,CAAC;AAEHH,IAAI,CAACC,IAAI,CAAC,YAAY,EAAE,OAAO;EAC7BH,OAAO,EAAEE,IAAI,CAACE,EAAE;AAClB,CAAC,CAAC,CAAC;AAEHF,IAAI,CAACC,IAAI,CAAC,aAAa,EAAE,OAAO;EAC9BF,QAAQ,EAAEC,IAAI,CAACE,EAAE;AACnB,CAAC,CAAC,CAAC;AAEH,MAAME,WAAW,GAAGN,OAAoB;AACxC,MAAMO,eAAe,GAAGT,WAAwB;AAChD,MAAMU,YAAY,GAAGP,QAAqB;AAE1C,UAAUQ,IAAI,GAAG,CAAC;AAElB,MAAMC,KAAK,GAAGb,WAAW,CAAC;EACxBc,YAAY,EAAE;IAAEN,IAAI,EAAE;EAAM,CAAC;EAC7BO,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEFC,UAAU,CAAC,MAAM;EACfZ,IAAI,CAACa,aAAa,EAAE;AACtB,CAAC,CAAC;AAEFV,IAAI,CAAC,gBAAgB,EAAE,MAAM;EAC3BT,UAAU,CAAC,MAAMG,aAAa,CAACW,KAAK,CAAC,CAAC;EACtCM,MAAM,CAACR,YAAY,CAAC,CAACS,qBAAqB,CAAC,CAAC,CAAC;EAC7CD,MAAM,CAACR,YAAY,CAAC,CAACU,oBAAoB,CAACR,KAAK,CAAC;AAClD,CAAC,CAAC;AAEFL,IAAI,CAAC,eAAe,EAAE,MAAM;EAC1BT,UAAU,CAAC,MAAMG,aAAa,CAACW,KAAK,EAAED,IAAI,CAAC,CAAC;EAC5CO,MAAM,CAACV,WAAW,CAAC,CAACW,qBAAqB,CAAC,CAAC,CAAC;EAC5CD,MAAM,CAACV,WAAW,CAAC,CAACY,oBAAoB,CAACT,IAAI,CAAC;AAChD,CAAC,CAAC;AAEFJ,IAAI,CAAC,mBAAmB,EAAE,MAAM;EAC9BT,UAAU,CAAC,MAAMG,aAAa,CAACW,KAAK,CAAC,CAAC;EACtCM,MAAM,CAACT,eAAe,CAAC,CAACU,qBAAqB,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;AAEFZ,IAAI,CAAC,yBAAyB,EAAE,MAAM;EACpC,MAAMc,KAAK,GAAGvB,UAAU,CAAC,MAAMG,aAAa,CAACW,KAAK,CAAC,CAAC;EACpDM,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,OAAO,CAAC;IAAEjB,IAAI,EAAE;EAAK,CAAC,CAAC;AACtD,CAAC,CAAC;AAEFA,IAAI,CAAC,mDAAmD,EAAE,MAAM;EAC9DE,eAAe,CAACgB,kBAAkB,CAACnB,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMe,KAAK,GAAGvB,UAAU,CAAC,MAAMG,aAAa,CAACW,KAAK,CAAC,CAAC;EACpDM,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC,CAACG,IAAI,CAACd,KAAK,CAACe,eAAe,EAAE,CAAC;AAC5D,CAAC,CAAC"}