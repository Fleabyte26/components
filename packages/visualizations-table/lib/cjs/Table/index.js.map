{"version":3,"file":"index.js","names":["Table","config","column_order","show_row_numbers","type","data","fields","DEFAULT_EMPTY_FIELDS","height","DEFAULT_HEIGHT","pivots","width","totals","defaultRowHeight","useTranslation","t","scrollContainer","useRef","useVirtual","virtualRows","OffsetTop","OffsetBottom","useHeadlessTable","table","sorting","handleTableSort","tableRows","getRowModel","rows","series","truncate_text","truncate_header","show_totals","seriesMinMax","Object","fromEntries","measures","map","name","min","getSeriesMin","max","getSeriesMax","headerGroups","getHeaderGroups","rowNumWidth","String","length","headerGroup","i","undefined","headers","header","headerContent","column","columnDef","columnSortState","find","s","id","getSortAssets","SortIcon","sortText","ariaSort","colSpan","getSize","flexRender","getContext","e","index","measureElement","tableRow","getVisibleCells","cell","measureIndex","findIndex","m","columnConfig","Array","isArray","cellContent","Infinity","valueFormat","get","CellValue","getValue","cell_visualization","color","Number","numeral","format","totalsText","CellContentWrapper","children","truncateText","HeaderContentWrapper","truncateHeader","props","ScrollWrapper","styled","div","TableElement","theme","colors","text5","fonts","body","THead","thead","TFoot","tfoot","TableCellStyles","css","ui2","fontSizes","small","lineHeights","space","xxsmall","xsmall","TableCell","td","RowNum","ui4","TableHeadCell","th","background","TableRow","tr","ui1","CellContentLayout","TableHeadLayout","u16","IconButton","sortButtonDefaultVisible"],"sources":["../../../src/Table/index.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useRef } from 'react'\nimport type { FC } from 'react'\nimport type { TableProps, CTableSeries } from '@looker/visualizations-adapters'\nimport {\n  getSeriesMax,\n  getSeriesMin,\n  DEFAULT_HEIGHT,\n  DEFAULT_EMPTY_FIELDS,\n} from '@looker/visualizations-adapters'\nimport { flexRender } from '@tanstack/react-table'\nimport styled, { css } from 'styled-components'\nimport { IconButton, Truncate, Box, Grid } from '@looker/components'\nimport { useHeadlessTable, useVirtual } from '../hooks'\nimport { useTranslation, getSortAssets } from '../utils'\nimport { CellVisualization } from '../CellVisualization'\nimport numeral from 'numeral'\nimport get from 'lodash/get'\n\nexport const Table = ({\n  config = { column_order: [], show_row_numbers: true, type: 'table' },\n  data = [],\n  fields = DEFAULT_EMPTY_FIELDS,\n  height = DEFAULT_HEIGHT,\n  pivots,\n  width,\n  totals,\n  defaultRowHeight,\n}: TableProps) => {\n  const { t } = useTranslation('Table')\n\n  const scrollContainer = useRef<HTMLDivElement>(null)\n\n  const { virtualRows, OffsetTop, OffsetBottom } = useVirtual({\n    data,\n    scrollContainer,\n    defaultRowHeight,\n  })\n\n  const { table, sorting, handleTableSort } = useHeadlessTable({\n    data,\n    config,\n    fields,\n    pivots,\n  })\n\n  const tableRows = table.getRowModel().rows\n\n  const {\n    series = {},\n    show_row_numbers,\n    truncate_text,\n    truncate_header,\n    show_totals = false,\n  } = config\n\n  const seriesMinMax = Object.fromEntries(\n    fields.measures.map(({ name }) => {\n      const min = getSeriesMin(name, data)\n      const max = getSeriesMax(name, data)\n      return [name, { min, max }]\n    })\n  )\n\n  const headerGroups = table.getHeaderGroups()\n\n  const rowNumWidth = String(data.length).length * 14\n  return (\n    <ScrollWrapper width={width} height={height} ref={scrollContainer}>\n      <TableElement cellSpacing=\"0\">\n        <THead>\n          {headerGroups.map((headerGroup, i) => (\n            <tr key={`theadRow${i}`}>\n              {show_row_numbers ? (\n                <TableHeadCell width={rowNumWidth}></TableHeadCell>\n              ) : undefined}\n              {headerGroup.headers.map(header => {\n                const { header: headerContent } = header.column.columnDef\n\n                const columnSortState = sorting.find(s => s.id === header.id)\n\n                const { SortIcon, sortText, ariaSort } = getSortAssets(\n                  t,\n                  columnSortState\n                )\n\n                return (\n                  <TableHeadCell\n                    key={header.id}\n                    colSpan={header.colSpan}\n                    aria-sort={ariaSort}\n                    width={header.column.getSize()}\n                  >\n                    <TableHeadLayout\n                      sortButtonDefaultVisible={!!columnSortState}\n                    >\n                      <HeaderContentWrapper\n                        truncateHeader={!!truncate_header}\n                        data-testid=\"columnheader-label\"\n                      >\n                        {flexRender(headerContent, header.getContext())}\n                      </HeaderContentWrapper>\n                      {i === headerGroups.length - 1 && (\n                        /* only render sort button in last header row */\n                        <IconButton\n                          icon={<SortIcon />}\n                          label={sortText}\n                          outline\n                          shape=\"square\"\n                          size=\"xxsmall\"\n                          onClick={e => handleTableSort(header, e)}\n                        />\n                      )}\n                    </TableHeadLayout>\n                  </TableHeadCell>\n                )\n              })}\n            </tr>\n          ))}\n        </THead>\n        <tbody>\n          <OffsetTop />\n          {virtualRows.map(({ index, measureElement }) => {\n            const tableRow = tableRows[index]\n            return (\n              <TableRow key={tableRow.id}>\n                {show_row_numbers ? <RowNum>{index + 1}</RowNum> : undefined}\n                {tableRow\n                  ?.getVisibleCells?.()\n                  .map(({ column, getContext, ...cell }) => {\n                    const measureIndex = fields.measures.findIndex(\n                      m => m.name === column.id\n                    )\n                    const columnConfig: CTableSeries = Array.isArray(series)\n                      ? series[measureIndex]\n                      : series[column.id]\n\n                    const { cell: cellContent } = column.columnDef\n\n                    const { max, min } = seriesMinMax?.[column.id] || {\n                      max: Infinity,\n                      min: 0,\n                    }\n\n                    const valueFormat = Array.isArray(series)\n                      ? get(series, [measureIndex, 'value_format'])\n                      : get(series, [column.id, 'value_format'])\n\n                    const CellValue = cell.getValue()\n\n                    return (\n                      <TableCell\n                        key={cell.id}\n                        ref={measureElement}\n                        width={column.getSize()}\n                      >\n                        {typeof CellValue === 'function' ? (\n                          <CellValue />\n                        ) : (\n                          <CellContentLayout>\n                            {columnConfig?.cell_visualization ? (\n                              <CellVisualization\n                                color={columnConfig.color}\n                                min={min}\n                                max={max}\n                                value={Number(cell.getValue())}\n                              />\n                            ) : null}\n                            <CellContentWrapper truncateText={!!truncate_text}>\n                              {valueFormat\n                                ? numeral(Number(cell.getValue())).format(\n                                    valueFormat\n                                  )\n                                : flexRender(cellContent, getContext())}\n                            </CellContentWrapper>\n                          </CellContentLayout>\n                        )}\n                      </TableCell>\n                    )\n                  })}\n              </TableRow>\n            )\n          })}\n          <OffsetBottom />\n        </tbody>\n        <TFoot>\n          {show_totals && totals\n            ? table.getHeaderGroups().map((headerGroup, i) => (\n                <tr key={`tfootRow${i}`}>\n                  {headerGroup.headers.map((header, index) => {\n                    const totalsText = t('Totals')\n\n                    const measureIndex = fields.measures.findIndex(\n                      m => m.name === header.id\n                    )\n\n                    const valueFormat = Array.isArray(series)\n                      ? get(series, [measureIndex, 'value_format'])\n                      : get(series, [header.id, 'value_format'])\n\n                    if (index === 0) {\n                      return (\n                        <TableHeadCell\n                          key={`${header.id || null}-foot`}\n                          colSpan={show_row_numbers ? 2 : 1}\n                        >\n                          {totalsText}\n                        </TableHeadCell>\n                      )\n                    } else {\n                      return (\n                        <TableHeadCell key={`${header.id || null}-foot`}>\n                          {valueFormat\n                            ? numeral(Number(totals[header.id])).format(\n                                valueFormat\n                              )\n                            : totals[header.id] || null}\n                        </TableHeadCell>\n                      )\n                    }\n                  })}\n                </tr>\n              ))\n            : null}\n        </TFoot>\n      </TableElement>\n    </ScrollWrapper>\n  )\n}\n\n/**\n * Truncate table body content when truncateText is true\n */\nconst CellContentWrapper: FC<{ truncateText: boolean }> = ({\n  children,\n  truncateText,\n}) =>\n  truncateText ? (\n    <Grid columns={1} width=\"auto\">\n      <Truncate>{children}</Truncate>\n    </Grid>\n  ) : (\n    <>{children}</>\n  )\n\n/**\n * Truncate header text when truncateHeader is true\n */\nconst HeaderContentWrapper: FC<{ truncateHeader: boolean }> = ({\n  truncateHeader,\n  ...props\n}) => (truncateHeader ? <Truncate {...props} /> : <Box {...props} />)\n\nconst ScrollWrapper = styled.div<{ width?: number; height: number }>`\n  max-height: ${({ height }) => `${height}px`};\n  overflow: auto;\n  max-width: ${({ width }) => (width ? `${width}px` : `100%`)};\n  position: relative;\n`\n\nconst TableElement = styled.table`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.text5};\n  font-family: ${({ theme }) => theme.fonts.body};\n`\n\nconst THead = styled.thead`\n  top: 0;\n  position: sticky;\n`\n\nconst TFoot = styled.tfoot`\n  position: sticky;\n  bottom: 0px;\n`\n\nconst TableCellStyles = css<{ width?: number }>`\n  border-right: 1px solid ${({ theme }) => theme.colors.ui2};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  line-height: ${({ theme }) => theme.lineHeights.small};\n  padding: ${({ theme }) =>\n    css`\n      ${theme.space.xxsmall} ${theme.space.xsmall}\n    `};\n  width: ${({ width }) => width}px;\n  &:last-child {\n    border-right: none;\n  }\n`\n\nconst TableCell = styled.td<{ width?: number }>`\n  ${TableCellStyles}\n`\n\nconst RowNum = styled(TableCell)`\n  border-right: 1px solid ${({ theme }) => theme.colors.ui4};\n  text-align: right;\n  width: 1rem;\n`\n\nconst TableHeadCell = styled.th<{ width?: number }>`\n  ${TableCellStyles}\n  text-align: left;\n  background: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.ui4};\n`\n\nconst TableRow = styled.tr`\n  :nth-child(even) {\n    background-color: ${({ theme }) => theme.colors.ui1};\n  }\n`\n\nconst CellContentLayout = styled.div`\n  align-items: center;\n  display: flex;\n  gap: ${({ theme }) => theme.space.xxsmall};\n`\n\nconst TableHeadLayout = styled.div<{ sortButtonDefaultVisible: boolean }>`\n  display: grid;\n  grid-template-columns: minMax(${({ theme }) => theme.space.u16}, 1fr) auto;\n  ${IconButton} {\n    ${({ sortButtonDefaultVisible }) =>\n      sortButtonDefaultVisible\n        ? css`\n            visibility: visible;\n          `\n        : css`\n            visibility: hidden;\n          `}\n  }\n  &:hover {\n    ${IconButton} {\n      visibility: visible;\n    }\n  }\n`\n"],"mappings":"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"}