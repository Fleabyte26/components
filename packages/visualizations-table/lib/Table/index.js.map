{"version":3,"file":"index.js","names":["React","useRef","getSeriesMax","getSeriesMin","DEFAULT_HEIGHT","DEFAULT_EMPTY_FIELDS","flexRender","styled","css","IconButton","Truncate","Box","Grid","useHeadlessTable","useVirtual","useTranslation","getSortAssets","CellVisualization","numeral","get","Table","config","column_order","show_row_numbers","type","data","fields","height","pivots","width","totals","defaultRowHeight","t","scrollContainer","virtualRows","OffsetTop","OffsetBottom","table","sorting","handleTableSort","tableRows","getRowModel","rows","series","truncate_text","truncate_header","show_totals","seriesMinMax","Object","fromEntries","measures","map","name","min","max","headerGroups","getHeaderGroups","rowNumWidth","String","length","headerGroup","i","undefined","headers","header","headerContent","column","columnDef","columnSortState","find","s","id","SortIcon","sortText","ariaSort","colSpan","getSize","getContext","e","index","measureElement","tableRow","getVisibleCells","cell","measureIndex","findIndex","m","columnConfig","Array","isArray","cellContent","Infinity","valueFormat","CellValue","getValue","cell_visualization","color","Number","format","totalsText","CellContentWrapper","children","truncateText","HeaderContentWrapper","truncateHeader","props","ScrollWrapper","div","TableElement","theme","colors","text5","fonts","body","THead","thead","TFoot","tfoot","TableCellStyles","ui2","fontSizes","small","lineHeights","space","xxsmall","xsmall","TableCell","td","RowNum","ui4","TableHeadCell","th","background","TableRow","tr","ui1","CellContentLayout","TableHeadLayout","u16","sortButtonDefaultVisible"],"sources":["../../src/Table/index.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, { useRef } from 'react'\nimport type { FC } from 'react'\nimport type { TableProps, CTableSeries } from '@looker/visualizations-adapters'\nimport {\n  getSeriesMax,\n  getSeriesMin,\n  DEFAULT_HEIGHT,\n  DEFAULT_EMPTY_FIELDS,\n} from '@looker/visualizations-adapters'\nimport { flexRender } from '@tanstack/react-table'\nimport styled, { css } from 'styled-components'\nimport { IconButton, Truncate, Box, Grid } from '@looker/components'\nimport { useHeadlessTable, useVirtual } from '../hooks'\nimport { useTranslation, getSortAssets } from '../utils'\nimport { CellVisualization } from '../CellVisualization'\nimport numeral from 'numeral'\nimport get from 'lodash/get'\n\nexport const Table = ({\n  config = { column_order: [], show_row_numbers: true, type: 'table' },\n  data = [],\n  fields = DEFAULT_EMPTY_FIELDS,\n  height = DEFAULT_HEIGHT,\n  pivots,\n  width,\n  totals,\n  defaultRowHeight,\n}: TableProps) => {\n  const { t } = useTranslation('Table')\n\n  const scrollContainer = useRef<HTMLDivElement>(null)\n\n  const { virtualRows, OffsetTop, OffsetBottom } = useVirtual({\n    data,\n    scrollContainer,\n    defaultRowHeight,\n  })\n\n  const { table, sorting, handleTableSort } = useHeadlessTable({\n    data,\n    config,\n    fields,\n    pivots,\n  })\n\n  const tableRows = table.getRowModel().rows\n\n  const {\n    series = {},\n    show_row_numbers,\n    truncate_text,\n    truncate_header,\n    show_totals = false,\n  } = config\n\n  const seriesMinMax = Object.fromEntries(\n    fields.measures.map(({ name }) => {\n      const min = getSeriesMin(name, data)\n      const max = getSeriesMax(name, data)\n      return [name, { min, max }]\n    })\n  )\n\n  const headerGroups = table.getHeaderGroups()\n\n  const rowNumWidth = String(data.length).length * 14\n  return (\n    <ScrollWrapper width={width} height={height} ref={scrollContainer}>\n      <TableElement cellSpacing=\"0\">\n        <THead>\n          {headerGroups.map((headerGroup, i) => (\n            <tr key={`theadRow${i}`}>\n              {show_row_numbers ? (\n                <TableHeadCell width={rowNumWidth}></TableHeadCell>\n              ) : undefined}\n              {headerGroup.headers.map(header => {\n                const { header: headerContent } = header.column.columnDef\n\n                const columnSortState = sorting.find(s => s.id === header.id)\n\n                const { SortIcon, sortText, ariaSort } = getSortAssets(\n                  t,\n                  columnSortState\n                )\n\n                return (\n                  <TableHeadCell\n                    key={header.id}\n                    colSpan={header.colSpan}\n                    aria-sort={ariaSort}\n                    width={header.column.getSize()}\n                  >\n                    <TableHeadLayout\n                      sortButtonDefaultVisible={!!columnSortState}\n                    >\n                      <HeaderContentWrapper\n                        truncateHeader={!!truncate_header}\n                        data-testid=\"columnheader-label\"\n                      >\n                        {flexRender(headerContent, header.getContext())}\n                      </HeaderContentWrapper>\n                      {i === headerGroups.length - 1 && (\n                        /* only render sort button in last header row */\n                        <IconButton\n                          icon={<SortIcon />}\n                          label={sortText}\n                          outline\n                          shape=\"square\"\n                          size=\"xxsmall\"\n                          onClick={e => handleTableSort(header, e)}\n                        />\n                      )}\n                    </TableHeadLayout>\n                  </TableHeadCell>\n                )\n              })}\n            </tr>\n          ))}\n        </THead>\n        <tbody>\n          <OffsetTop />\n          {virtualRows.map(({ index, measureElement }) => {\n            const tableRow = tableRows[index]\n            return (\n              <TableRow key={tableRow.id}>\n                {show_row_numbers ? <RowNum>{index + 1}</RowNum> : undefined}\n                {tableRow\n                  ?.getVisibleCells?.()\n                  .map(({ column, getContext, ...cell }) => {\n                    const measureIndex = fields.measures.findIndex(\n                      m => m.name === column.id\n                    )\n                    const columnConfig: CTableSeries = Array.isArray(series)\n                      ? series[measureIndex]\n                      : series[column.id]\n\n                    const { cell: cellContent } = column.columnDef\n\n                    const { max, min } = seriesMinMax?.[column.id] || {\n                      max: Infinity,\n                      min: 0,\n                    }\n\n                    const valueFormat = Array.isArray(series)\n                      ? get(series, [measureIndex, 'value_format'])\n                      : get(series, [column.id, 'value_format'])\n\n                    const CellValue = cell.getValue()\n\n                    return (\n                      <TableCell\n                        key={cell.id}\n                        ref={measureElement}\n                        width={column.getSize()}\n                      >\n                        {typeof CellValue === 'function' ? (\n                          <CellValue />\n                        ) : (\n                          <CellContentLayout>\n                            {columnConfig?.cell_visualization ? (\n                              <CellVisualization\n                                color={columnConfig.color}\n                                min={min}\n                                max={max}\n                                value={Number(cell.getValue())}\n                              />\n                            ) : null}\n                            <CellContentWrapper truncateText={!!truncate_text}>\n                              {valueFormat\n                                ? numeral(Number(cell.getValue())).format(\n                                    valueFormat\n                                  )\n                                : flexRender(cellContent, getContext())}\n                            </CellContentWrapper>\n                          </CellContentLayout>\n                        )}\n                      </TableCell>\n                    )\n                  })}\n              </TableRow>\n            )\n          })}\n          <OffsetBottom />\n        </tbody>\n        <TFoot>\n          {show_totals && totals\n            ? table.getHeaderGroups().map((headerGroup, i) => (\n                <tr key={`tfootRow${i}`}>\n                  {headerGroup.headers.map((header, index) => {\n                    const totalsText = t('Totals')\n\n                    const measureIndex = fields.measures.findIndex(\n                      m => m.name === header.id\n                    )\n\n                    const valueFormat = Array.isArray(series)\n                      ? get(series, [measureIndex, 'value_format'])\n                      : get(series, [header.id, 'value_format'])\n\n                    if (index === 0) {\n                      return (\n                        <TableHeadCell\n                          key={`${header.id || null}-foot`}\n                          colSpan={show_row_numbers ? 2 : 1}\n                        >\n                          {totalsText}\n                        </TableHeadCell>\n                      )\n                    } else {\n                      return (\n                        <TableHeadCell key={`${header.id || null}-foot`}>\n                          {valueFormat\n                            ? numeral(Number(totals[header.id])).format(\n                                valueFormat\n                              )\n                            : totals[header.id] || null}\n                        </TableHeadCell>\n                      )\n                    }\n                  })}\n                </tr>\n              ))\n            : null}\n        </TFoot>\n      </TableElement>\n    </ScrollWrapper>\n  )\n}\n\n/**\n * Truncate table body content when truncateText is true\n */\nconst CellContentWrapper: FC<{ truncateText: boolean }> = ({\n  children,\n  truncateText,\n}) =>\n  truncateText ? (\n    <Grid columns={1} width=\"auto\">\n      <Truncate>{children}</Truncate>\n    </Grid>\n  ) : (\n    <>{children}</>\n  )\n\n/**\n * Truncate header text when truncateHeader is true\n */\nconst HeaderContentWrapper: FC<{ truncateHeader: boolean }> = ({\n  truncateHeader,\n  ...props\n}) => (truncateHeader ? <Truncate {...props} /> : <Box {...props} />)\n\nconst ScrollWrapper = styled.div<{ width?: number; height: number }>`\n  max-height: ${({ height }) => `${height}px`};\n  overflow: auto;\n  max-width: ${({ width }) => (width ? `${width}px` : `100%`)};\n  position: relative;\n`\n\nconst TableElement = styled.table`\n  width: 100%;\n  color: ${({ theme }) => theme.colors.text5};\n  font-family: ${({ theme }) => theme.fonts.body};\n`\n\nconst THead = styled.thead`\n  top: 0;\n  position: sticky;\n`\n\nconst TFoot = styled.tfoot`\n  position: sticky;\n  bottom: 0px;\n`\n\nconst TableCellStyles = css<{ width?: number }>`\n  border-right: 1px solid ${({ theme }) => theme.colors.ui2};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  line-height: ${({ theme }) => theme.lineHeights.small};\n  padding: ${({ theme }) =>\n    css`\n      ${theme.space.xxsmall} ${theme.space.xsmall}\n    `};\n  width: ${({ width }) => width}px;\n  &:last-child {\n    border-right: none;\n  }\n`\n\nconst TableCell = styled.td<{ width?: number }>`\n  ${TableCellStyles}\n`\n\nconst RowNum = styled(TableCell)`\n  border-right: 1px solid ${({ theme }) => theme.colors.ui4};\n  text-align: right;\n  width: 1rem;\n`\n\nconst TableHeadCell = styled.th<{ width?: number }>`\n  ${TableCellStyles}\n  text-align: left;\n  background: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.ui4};\n`\n\nconst TableRow = styled.tr`\n  :nth-child(even) {\n    background-color: ${({ theme }) => theme.colors.ui1};\n  }\n`\n\nconst CellContentLayout = styled.div`\n  align-items: center;\n  display: flex;\n  gap: ${({ theme }) => theme.space.xxsmall};\n`\n\nconst TableHeadLayout = styled.div<{ sortButtonDefaultVisible: boolean }>`\n  display: grid;\n  grid-template-columns: minMax(${({ theme }) => theme.space.u16}, 1fr) auto;\n  ${IconButton} {\n    ${({ sortButtonDefaultVisible }) =>\n      sortButtonDefaultVisible\n        ? css`\n            visibility: visible;\n          `\n        : css`\n            visibility: hidden;\n          `}\n  }\n  &:hover {\n    ${IconButton} {\n      visibility: visible;\n    }\n  }\n`\n"],"mappings":"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"}